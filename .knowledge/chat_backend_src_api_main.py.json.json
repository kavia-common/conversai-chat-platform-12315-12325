{"is_source_file": true, "format": "Python", "description": "This source file implements a backend API for a chat application with user authentication, conversation management, message handling, and integration with an OpenAI-compatible language model. It defines endpoints for user signup, login, profile management, creating/listing/deleting conversations, posting/listing messages, and querying the LLM. It also includes configuration settings, security utilities, and middleware setup.", "external_files": ["src/db/config.py", "src/db/models.py", "src/schemas.py", "src/security.py"], "external_methods": ["hash_password", "verify_password"], "published": ["/api/main.py"], "classes": [{"name": "TokenResponse", "description": "Schema for JWT token response after login/signup."}, {"name": "UpdateProfileRequest", "description": "Schema for updating user profile (e.g., display name)."}, {"name": "ChatRequest", "description": "Request schema for sending a prompt to the LLM."}, {"name": "ChatResponse", "description": "Response schema containing assistant's reply."}], "methods": [{"name": "str _create_access_token(subject: Dict[str, Any], expires_delta: Optional[timedelta] = None)", "description": "Generates a JWT token with an expiration based on subject data.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] _decode_token(token: str)", "description": "Decodes and verifies a JWT token, raising exceptions if invalid or expired.", "scope": "", "scopeKind": ""}, {"name": "User _get_current_user( token: str = Depends(oauth2_scheme), db: Session = Depends(get_db), )", "description": "Dependency to retrieve the current authenticated user from the token.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Health status endpoint for the service.", "scope": "", "scopeKind": ""}, {"name": "db_health(db: Session = Depends(get_db))", "description": "Simple check to verify database connectivity.", "scope": "", "scopeKind": ""}, {"name": "signup(payload: UserCreate, db: Session = Depends(get_db))", "description": "Endpoint to create a new user account with hashed password.", "scope": "", "scopeKind": ""}, {"name": "login(payload: UserLogin, db: Session = Depends(get_db))", "description": "Authenticate user and generate JWT token.", "scope": "", "scopeKind": ""}, {"name": "get_me(current_user: User = Depends(_get_current_user))", "description": "Retrieve current authenticated user's profile.", "scope": "", "scopeKind": ""}, {"name": "update_me( payload: UpdateProfileRequest, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )", "description": "Update current user's profile information.", "scope": "", "scopeKind": ""}, {"name": "create_conversation( payload: ConversationCreate, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )", "description": "Create a new conversation owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "list_conversations( q: Optional[str] = None, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )", "description": "List conversations owned by current user, with optional filtering.", "scope": "", "scopeKind": ""}, {"name": "get_conversation( conversation_id: int, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )", "description": "Retrieve a specific conversation along with its messages.", "scope": "", "scopeKind": ""}, {"name": "delete_conversation( conversation_id: int, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )", "description": "Delete a specific conversation.", "scope": "", "scopeKind": ""}, {"name": "post_message( payload: MessageCreate, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )", "description": "Post a message to a conversation, adding it to the chain.", "scope": "", "scopeKind": ""}, {"name": "list_messages( conversation_id: int, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )", "description": "List all messages for a given conversation.", "scope": "", "scopeKind": ""}, {"name": "str _call_openai_chat( messages: List[Dict[str, str]], model: str, temperature: float, api_key: str, base_url: str, )", "description": "Internal async function to call OpenAI API and get chat completion.", "scope": "", "scopeKind": ""}, {"name": "llm_chat( payload: ChatRequest, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), x_openai_api_key: Optional[str] = Header(default=None, alias=\"X-OpenAI-API-Key\"), )", "description": "Endpoint to interact with the LLM, sending prompt/context and storing responses.", "scope": "", "scopeKind": ""}], "calls": ["_decode_token", "jwt.encode", "db.execute", "db.get", "db.add", "db.commit", "db.refresh", "select", "or_", "jwt.decode", "httpx.AsyncClient.post"], "search-terms": ["FastAPI", "JWT_SECRET_KEY", "src/db/models.py", "src/security.py", "OAuth2PasswordBearer", "Conversation", "Message", "llm_chat", "OpenAI API", "conversai-chat-platform"], "state": 2, "file_id": 2, "knowledge_revision": 22, "git_revision": "14a9672425f78d2e63c72c601f31f712950682d3", "revision_history": [{"8": "d9c50c526860f4c55fe725f99cdd3f773d3d4c19"}, {"18": "d9c50c526860f4c55fe725f99cdd3f773d3d4c19"}, {"22": "14a9672425f78d2e63c72c601f31f712950682d3"}], "ctags": [{"_type": "tag", "name": "ChatRequest", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^class ChatRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ChatResponse", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^class ChatResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JWT_ALGORITHM", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^JWT_ALGORITHM = os.getenv(\"JWT_ALGORITHM\", \"HS256\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_EXPIRES_MINUTES", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^JWT_EXPIRES_MINUTES = int(os.getenv(\"JWT_EXPIRES_MINUTES\", \"60\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_SECRET_KEY", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^JWT_SECRET_KEY = os.getenv(\"JWT_SECRET_KEY\", \"dev-secret-change-me\")  # In production override v/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OPENAI_API_BASE", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^OPENAI_API_BASE = os.getenv(\"OPENAI_API_BASE\", \"https:\\/\\/api.openai.com\\/v1\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OPENAI_API_KEY", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OPENAI_MODEL", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^OPENAI_MODEL = os.getenv(\"OPENAI_MODEL\", \"gpt-4o-mini\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "TokenResponse", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^class TokenResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UpdateProfileRequest", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^class UpdateProfileRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_call_openai_chat", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^async def _call_openai_chat($/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "( messages: List[Dict[str, str]], model: str, temperature: float, api_key: str, base_url: str, )"}, {"_type": "tag", "name": "_create_access_token", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def _create_access_token(subject: Dict[str, Any], expires_delta: Optional[timedelta] = None) -> /", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(subject: Dict[str, Any], expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "_decode_token", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def _decode_token(token: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "_get_current_user", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^async def _get_current_user($/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "( token: str = Depends(oauth2_scheme), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^    access_token: str = Field(..., description=\"JWT access token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "assistant_message", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^    assistant_message: str = Field(..., description=\"Assistant response text\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ChatResponse", "scopeKind": "class"}, {"_type": "tag", "name": "conversation_id", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^    conversation_id: int = Field(..., description=\"Conversation ID\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "ChatResponse", "scopeKind": "class"}, {"_type": "tag", "name": "conversation_id", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^    conversation_id: int = Field(..., description=\"Target conversation id\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "ChatRequest", "scopeKind": "class"}, {"_type": "tag", "name": "create_conversation", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def create_conversation($/", "language": "Python", "kind": "function", "signature": "( payload: ConversationCreate, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )"}, {"_type": "tag", "name": "db_health", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def db_health(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_conversation", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def delete_conversation($/", "language": "Python", "kind": "function", "signature": "( conversation_id: int, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )"}, {"_type": "tag", "name": "display_name", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^    display_name: Optional[str] = Field(None, description=\"New display name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "UpdateProfileRequest", "scopeKind": "class"}, {"_type": "tag", "name": "get_conversation", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def get_conversation($/", "language": "Python", "kind": "function", "signature": "( conversation_id: int, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )"}, {"_type": "tag", "name": "get_me", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def get_me(current_user: User = Depends(_get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(_get_current_user))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_conversations", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def list_conversations($/", "language": "Python", "kind": "function", "signature": "( q: Optional[str] = None, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )"}, {"_type": "tag", "name": "list_messages", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def list_messages($/", "language": "Python", "kind": "function", "signature": "( conversation_id: int, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )"}, {"_type": "tag", "name": "llm_chat", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^async def llm_chat($/", "language": "Python", "kind": "function", "signature": "( payload: ChatRequest, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), x_openai_api_key: Optional[str] = Header(default=None, alias=\"X-OpenAI-API-Key\"), )"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def login(payload: UserLogin, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: UserLogin, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "model", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^    model: Optional[str] = Field(None, description=\"Override model name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "ChatRequest", "scopeKind": "class"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "post_message", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def post_message($/", "language": "Python", "kind": "function", "signature": "( payload: MessageCreate, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )"}, {"_type": "tag", "name": "prompt", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^    prompt: str = Field(..., min_length=1, description=\"User message to send to the model\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ChatRequest", "scopeKind": "class"}, {"_type": "tag", "name": "signup", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def signup(payload: UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "system_prompt", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^    system_prompt: Optional[str] = Field(None, description=\"Optional system instruction override/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "ChatRequest", "scopeKind": "class"}, {"_type": "tag", "name": "temperature", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^    temperature: Optional[float] = Field(0.7, ge=0, le=2, description=\"Sampling temperature\")$/", "language": "Python", "typeref": "typename:Optional[float]", "kind": "variable", "scope": "ChatRequest", "scopeKind": "class"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^    token_type: str = Field(\"bearer\", description=\"Token type\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}, {"_type": "tag", "name": "update_me", "path": "/home/kavia/workspace/code-generation/conversai-chat-platform-12315-12325/chat_backend/src/api/main.py", "pattern": "/^def update_me($/", "language": "Python", "kind": "function", "signature": "( payload: UpdateProfileRequest, db: Session = Depends(get_db), current_user: User = Depends(_get_current_user), )"}], "hash": "17bc2c8827aa2df1ebbec478f10376b1", "format-version": 4, "code-base-name": "chat_backend", "filename": "chat_backend/src/api/main.py", "fields": [{"name": "JWT_ALGORITHM = os.getenv(\"JWT_ALGORITHM\", \"HS256\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_EXPIRES_MINUTES = int(os.getenv(\"JWT_EXPIRES_MINUTES\", \"60\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_SECRET_KEY = os.getenv(\"JWT_SECRET_KEY\", \"dev-secret-change-me\")  # In production override v/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OPENAI_API_BASE = os.getenv(\"OPENAI_API_BASE\", \"https:\\/\\/api.openai.com\\/v1\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OPENAI_MODEL = os.getenv(\"OPENAI_MODEL\", \"gpt-4o-mini\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str access_token", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str assistant_message", "scope": "ChatResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "int conversation_id", "scope": "ChatResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] display_name", "scope": "UpdateProfileRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] model", "scope": "ChatRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str prompt", "scope": "ChatRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] system_prompt", "scope": "ChatRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[float] temperature", "scope": "ChatRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str token_type", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}]}